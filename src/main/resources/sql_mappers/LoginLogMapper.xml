<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.voc.vocapi.system.mapper.AuthMapper">

    <!-- 권한정보 목록 조회 -->
    <select id="getAuthList" resultType="kr.co.voc.vocapi.system.dto.AuthDto$Info">
        SELECT  auth_seq             AS "authSeq",
                hotel_cd             AS "hotelCd",
                auth_cd              AS "authCd",
                auth_nm              AS "authNm",
                auth_desc            AS "authDesc",
                use_yn               AS "useYn",
                reg_user_no          AS "regUserNo",
                reg_dt               AS "regDt",
                mod_user_no          AS "modUserNo",
                mod_dt               AS "modDt"
        FROM tb_sys_auth
        <where>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(p.hotelCd)">AND hotel_cd = #{p.hotelCd} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(p.authCd)">AND auth_cd = #{p.authCd} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(p.authNm)">AND auth_nm = #{p.authNm} </if>
        </where>
        ORDER BY auth_seq DESC
        <if test="offset &gt; -1">
            LIMIT #{offset}, #{length}
        </if>
    </select>
    <select id="getAuthListCount" resultType="long">
        SELECT COUNT(1)
        FROM tb_sys_auth
        <where>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(hotelCd)">AND hotel_cd = #{hotelCd} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(authCd)">AND auth_cd = #{authCd} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(authNm)">AND auth_nm = #{authNm} </if>
        </where>
    </select>

	<!-- 권한정보 상세 조회 -->
    <select id="getAuth" resultType="kr.co.voc.vocapi.system.dto.AuthDto$Info">
        SELECT auth_seq             AS "authSeq",
               hotel_cd             AS "hotelCd",
               auth_cd              AS "authCd",
               auth_nm              AS "authNm",
               auth_desc            AS "authDesc",
               use_yn               AS "useYn",
               reg_user_no          AS "regUserNo",
               reg_dt               AS "regDt",
               mod_user_no          AS "modUserNo",
               mod_dt               AS "modDt"
          FROM tb_sys_auth A
         WHERE auth_seq=#{authSeq}
    </select>

	<!-- 권한정보 등록 -->
    <insert id="insertAuth">
        INSERT INTO tb_sys_auth
        (
            hotel_cd,
            auth_cd,
            auth_nm,
            auth_desc,
            use_yn,
            reg_user_no,
            mod_user_no
        )
        VALUES
        (
            #{hotelCd},
            #{authCd},
            #{authNm},
            #{authDesc},
            #{useYn},
            #{regUserNo},
            #{modUserNo}
        )
        <selectKey resultType="int" keyProperty="returnKey" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>

	<!-- 권한정보 수정 -->
    <update id="updateAuth">
        UPDATE tb_sys_auth SET
               hotel_cd             = #{hotelCd},
               auth_cd              = #{authCd},
               auth_nm              = #{authNm},
               auth_desc            = #{authDesc},
               use_yn               = #{useYn},
               mod_user_no          = #{modUserNo} 
        WHERE auth_seq=#{authSeq}
	</update>

	<!-- 권한정보 삭제 -->
    <update id="deleteAuth">
        UPDATE tb_sys_auth
           SET use_yn = 'N'
         WHERE auth_seq=#{authSeq}
    </update>
</mapper>
