<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.voc.vocapi.system.mapper.SysUserMapper">

    <!-- 사용자정보 목록 조회 -->
    <select id="getSysUserList" resultType="system.sysuser">
        SELECT user_seq             AS "userSeq",
               hotel_cd             AS "hotelCd",
               user_id              AS "userId",
               emp_type_cd          AS "empTypeCd",
               emp_no               AS "empNo",
               user_nm              AS "userNm",
               user_nm_en           AS "userNmEn",
               company_cd           AS "companyCd",
               company_nm           AS "companyNm",
               dept_cd              AS "deptCd",
               dept_nm              AS "deptNm",
               real_dept_cd         AS "realDeptCd",
               real_dept_nm         AS "realDeptNm",
               duty_cd              AS "dutyCd",
               duty_nm              AS "dutyNm",
               position_cd          AS "positionCd",
               position_nm          AS "positionNm",
               title_cd             AS "titleCd",
               title_nm             AS "titleNm",
               retire_yn            AS "retireYn",
               join_dt              AS "joinDt",
               retire_dt            AS "retireDt",
               tel_no               AS "telNo",
               cell_no              AS "cellNo",
               email_addr           AS "emailAddr",
               pw                   AS "pw",
               pw_chg_dt            AS "pwChgDt",
               account_lock_yn      AS "accountLockYn",
               etc1                 AS "etc1",
               etc2                 AS "etc2",
               etc3                 AS "etc3",
               use_yn               AS "useYn",
               reg_user_no          AS "regUserNo",
               reg_dt               AS "regDt",
               mod_user_no          AS "modUserNo",
               mod_dt               AS "modDt"
          FROM tb_sys_user
         <where>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(p.userSeq)">AND user_seq = #{p.userSeq} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(p.hotelCd)">AND hotel_cd = #{p.hotelCd} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(p.userId)">AND user_id = #{p.userId} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(p.empTypeCd)">AND emp_type_cd = #{p.empTypeCd} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(p.empNo)">AND emp_no = #{p.empNo} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(p.userNm)">AND user_nm = #{p.userNm} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(p.userNmEn)">AND user_nm_en = #{p.userNmEn} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(p.companyCd)">AND company_cd = #{p.companyCd} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(p.companyNm)">AND company_nm = #{p.companyNm} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(p.deptCd)">AND dept_cd = #{p.deptCd} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(p.deptNm)">AND dept_nm = #{p.deptNm} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(p.realDeptCd)">AND real_dept_cd = #{p.realDeptCd} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(p.realDeptNm)">AND real_dept_nm = #{p.realDeptNm} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(p.dutyCd)">AND duty_cd = #{p.dutyCd} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(p.dutyNm)">AND duty_nm = #{p.dutyNm} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(p.positionCd)">AND position_cd = #{p.positionCd} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(p.positionNm)">AND position_nm = #{p.positionNm} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(p.titleCd)">AND title_cd = #{p.titleCd} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(p.titleNm)">AND title_nm = #{p.titleNm} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(p.retireYn)">AND retire_yn = #{p.retireYn} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(p.joinDt)">AND join_dt = #{p.joinDt} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(p.retireDt)">AND retire_dt = #{p.retireDt} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(p.telNo)">AND tel_no = #{p.telNo} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(p.cellNo)">AND cell_no = #{p.cellNo} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(p.emailAddr)">AND email_addr = #{p.emailAddr} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(p.pw)">AND pw = #{p.pw} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(p.pwChgDt)">AND pw_chg_dt = #{p.pwChgDt} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(p.accountLockYn)">AND account_lock_yn = #{p.accountLockYn} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(p.etc1)">AND etc1 = #{p.etc1} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(p.etc2)">AND etc2 = #{p.etc2} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(p.etc3)">AND etc3 = #{p.etc3} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(p.useYn)">AND use_yn = #{p.useYn} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(p.regUserNo)">AND reg_user_no = #{p.regUserNo} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(p.regDt)">AND reg_dt = #{p.regDt} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(p.modUserNo)">AND mod_user_no = #{p.modUserNo} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(p.modDt)">AND mod_dt = #{p.modDt} </if>
         </where>
         ORDER BY lsupd_dt DESC
         <if test="offset &gt; -1">
         LIMIT #{offset}, #{length}
         </if>
    </select>
    <select id="getSysUserListCount" resultType="long">
        SELECT COUNT(1)
          FROM tb_sys_user
        <where>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(userSeq)">AND user_seq = #{userSeq} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(hotelCd)">AND hotel_cd = #{hotelCd} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(userId)">AND user_id = #{userId} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(empTypeCd)">AND emp_type_cd = #{empTypeCd} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(empNo)">AND emp_no = #{empNo} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(userNm)">AND user_nm = #{userNm} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(userNmEn)">AND user_nm_en = #{userNmEn} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(companyCd)">AND company_cd = #{companyCd} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(companyNm)">AND company_nm = #{companyNm} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(deptCd)">AND dept_cd = #{deptCd} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(deptNm)">AND dept_nm = #{deptNm} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(realDeptCd)">AND real_dept_cd = #{realDeptCd} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(realDeptNm)">AND real_dept_nm = #{realDeptNm} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(dutyCd)">AND duty_cd = #{dutyCd} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(dutyNm)">AND duty_nm = #{dutyNm} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(positionCd)">AND position_cd = #{positionCd} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(positionNm)">AND position_nm = #{positionNm} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(titleCd)">AND title_cd = #{titleCd} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(titleNm)">AND title_nm = #{titleNm} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(retireYn)">AND retire_yn = #{retireYn} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(joinDt)">AND join_dt = #{joinDt} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(retireDt)">AND retire_dt = #{retireDt} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(telNo)">AND tel_no = #{telNo} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(cellNo)">AND cell_no = #{cellNo} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(emailAddr)">AND email_addr = #{emailAddr} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(pw)">AND pw = #{pw} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(pwChgDt)">AND pw_chg_dt = #{pwChgDt} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(accountLockYn)">AND account_lock_yn = #{accountLockYn} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(etc1)">AND etc1 = #{etc1} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(etc2)">AND etc2 = #{etc2} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(etc3)">AND etc3 = #{etc3} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(useYn)">AND use_yn = #{useYn} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(regUserNo)">AND reg_user_no = #{regUserNo} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(regDt)">AND reg_dt = #{regDt} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(modUserNo)">AND mod_user_no = #{modUserNo} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(modDt)">AND mod_dt = #{modDt} </if>
        </where>
    </select>

	<!-- 사용자정보 상세 조회 -->
    <select id="getSysUser" resultType="system.sysuser">
        SELECT user_seq             AS "userSeq",
               hotel_cd             AS "hotelCd",
               user_id              AS "userId",
               emp_type_cd          AS "empTypeCd",
               emp_no               AS "empNo",
               user_nm              AS "userNm",
               user_nm_en           AS "userNmEn",
               company_cd           AS "companyCd",
               company_nm           AS "companyNm",
               dept_cd              AS "deptCd",
               dept_nm              AS "deptNm",
               real_dept_cd         AS "realDeptCd",
               real_dept_nm         AS "realDeptNm",
               duty_cd              AS "dutyCd",
               duty_nm              AS "dutyNm",
               position_cd          AS "positionCd",
               position_nm          AS "positionNm",
               title_cd             AS "titleCd",
               title_nm             AS "titleNm",
               retire_yn            AS "retireYn",
               join_dt              AS "joinDt",
               retire_dt            AS "retireDt",
               tel_no               AS "telNo",
               cell_no              AS "cellNo",
               email_addr           AS "emailAddr",
               pw                   AS "pw",
               pw_chg_dt            AS "pwChgDt",
               account_lock_yn      AS "accountLockYn",
               etc1                 AS "etc1",
               etc2                 AS "etc2",
               etc3                 AS "etc3",
               use_yn               AS "useYn",
               reg_user_no          AS "regUserNo",
               reg_dt               AS "regDt",
               mod_user_no          AS "modUserNo",
               mod_dt               AS "modDt"
          FROM tb_sys_user A
         <where>
           user_seq = #{userSeq}
         </where>
    </select>

	<!-- 사용자정보 등록 -->
    <insert id="insertSysUser">
        INSERT INTO tb_sys_user
		(
			user_seq,
   hotel_cd,
   user_id,
   emp_type_cd,
   emp_no,
   user_nm,
   user_nm_en,
   company_cd,
   company_nm,
   dept_cd,
   dept_nm,
   real_dept_cd,
   real_dept_nm,
   duty_cd,
   duty_nm,
   position_cd,
   position_nm,
   title_cd,
   title_nm,
   retire_yn,
   join_dt,
   retire_dt,
   tel_no,
   cell_no,
   email_addr,
   pw,
   pw_chg_dt,
   account_lock_yn,
   etc1,
   etc2,
   etc3,
   use_yn,
   reg_user_no,
   reg_dt,
   mod_user_no,
   mod_dt
		)
		VALUES
		(
			#{userSeq},
   #{hotelCd},
   #{userId},
   #{empTypeCd},
   #{empNo},
   #{userNm},
   #{userNmEn},
   #{companyCd},
   #{companyNm},
   #{deptCd},
   #{deptNm},
   #{realDeptCd},
   #{realDeptNm},
   #{dutyCd},
   #{dutyNm},
   #{positionCd},
   #{positionNm},
   #{titleCd},
   #{titleNm},
   #{retireYn},
   #{joinDt},
   #{retireDt},
   #{telNo},
   #{cellNo},
   #{emailAddr},
   #{pw},
   #{pwChgDt},
   #{accountLockYn},
   #{etc1},
   #{etc2},
   #{etc3},
   #{useYn},
   #{regUserNo},
   #{regDt},
   #{modUserNo},
   #{modDt}
		)
		<selectKey resultType="int" keyProperty="returnKey" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>

	<!-- 사용자정보 수정 -->
    <update id="updateSysUser">
		UPDATE tb_sys_user SET
			hotel_cd             = #{hotelCd},
   user_id              = #{userId},
   emp_type_cd          = #{empTypeCd},
   emp_no               = #{empNo},
   user_nm              = #{userNm},
   user_nm_en           = #{userNmEn},
   company_cd           = #{companyCd},
   company_nm           = #{companyNm},
   dept_cd              = #{deptCd},
   dept_nm              = #{deptNm},
   real_dept_cd         = #{realDeptCd},
   real_dept_nm         = #{realDeptNm},
   duty_cd              = #{dutyCd},
   duty_nm              = #{dutyNm},
   position_cd          = #{positionCd},
   position_nm          = #{positionNm},
   title_cd             = #{titleCd},
   title_nm             = #{titleNm},
   retire_yn            = #{retireYn},
   join_dt              = #{joinDt},
   retire_dt            = #{retireDt},
   tel_no               = #{telNo},
   cell_no              = #{cellNo},
   email_addr           = #{emailAddr},
   pw                   = #{pw},
   pw_chg_dt            = #{pwChgDt},
   account_lock_yn      = #{accountLockYn},
   etc1                 = #{etc1},
   etc2                 = #{etc2},
   etc3                 = #{etc3},
   use_yn               = #{useYn},
   reg_user_no          = #{regUserNo},
   reg_dt               = #{regDt},
   mod_user_no          = #{modUserNo},
   mod_dt               = #{modDt}
		<where>
             user_seq=#{userSeq}
         </where>	
	</update>

	<!-- 사용자정보 삭제 -->
    <update id="deleteSysUser">
        UPDATE tb_sys_user
           SET use_at = 'N'
         <where>
             user_seq=#{userSeq}
         </where>
    </update>

</mapper>
