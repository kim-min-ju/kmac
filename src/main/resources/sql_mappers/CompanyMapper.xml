<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.kmac.system.mapper.CompanyMapper">

    <!-- 호텔정보 목록 조회 -->
    <select id="getHotelList" resultType="kr.co.kmac.system.dto.CompanyDto$Info">
        SELECT company_cd             AS "companyCd",
            hotel_nm             AS "hotelNm",
            hotel_nm_en          AS "hotelNmEn",
            voc_sys_level_cd     AS "vocSysLevelCd",
            use_start_dt         AS "useStartDt",
            use_end_dt           AS "useEndDt",
            hotel_logo_path      AS "hotelLogoPath",
            use_yn               AS "useYn",
            reg_user_no          AS "regUserNo",
            reg_dt               AS "regDt",
            mod_user_no          AS "modUserNo",
            mod_dt               AS "modDt"
        FROM tb_hotel
        <where>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(p.companyCd)">AND company_cd = #{p.companyCd} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(p.hotelNm)">AND hotel_nm = #{p.hotelNm} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(p.hotelNmEn)">AND hotel_nm_en = #{p.hotelNmEn} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(p.vocSysLevelCd)">AND voc_sys_level_cd = #{p.vocSysLevelCd} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(p.useStartDt)">AND use_start_dt &gt;= #{p.useStartDt} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(p.useEndDt)">AND use_end_dt &lt;= #{p.useEndDt} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(p.hotelLogoPath)">AND hotel_logo_path = #{p.hotelLogoPath} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(p.useYn)">AND use_yn = #{p.useYn} </if>
        </where>
        ORDER BY reg_dt DESC
        <if test="offset &gt; -1">
            LIMIT #{offset}, #{length}
        </if>
    </select>
    <select id="getHotelListCount" resultType="long">
        SELECT COUNT(1)
        FROM tb_hotel
        <where>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(companyCd)">AND company_cd = #{companyCd} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(hotelNm)">AND hotel_nm = #{hotelNm} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(hotelNmEn)">AND hotel_nm_en = #{hotelNmEn} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(vocSysLevelCd)">AND voc_sys_level_cd = #{vocSysLevelCd} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(useStartDt)">AND use_start_dt &gt;= #{useStartDt} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(useEndDt)">AND use_end_dt &lt;= #{useEndDt} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(hotelLogoPath)">AND hotel_logo_path = #{hotelLogoPath} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(useYn)">AND use_yn = #{useYn} </if>
        </where>
    </select>

	<!-- 호텔정보 상세 조회 -->
    <select id="getHotel" resultType="kr.co.kmac.system.dto.CompanyDto$Info">
        SELECT A.company_cd             AS "companyCd",
               A.hotel_nm             AS "hotelNm",
               A.hotel_nm_en          AS "hotelNmEn",
               A.voc_sys_level_cd     AS "vocSysLevelCd",
               fn_getCodeNm('VOC_CASE_CD', A.voc_sys_level_cd) AS "vocSysLevelNm",
               A.use_start_dt         AS "useStartDt",
               A.use_end_dt           AS "useEndDt",
               A.hotel_logo_path      AS "hotelLogoPath",
               A.use_yn               AS "useYn",
               A.reg_user_no          AS "regUserNo",
               A.reg_dt               AS "regDt",
               A.mod_user_no          AS "modUserNo",
               A.mod_dt               AS "modDt"
        FROM tb_hotel A
        WHERE A.company_cd = #{companyCd}
    </select>

	<!-- 호텔정보 등록 -->
    <insert id="insertHotel">
        INSERT INTO tb_hotel
        (
            company_cd,
            hotel_nm,
            hotel_nm_en,
            voc_sys_level_cd,
            use_start_dt,
            use_end_dt,
            hotel_logo_path,
            use_yn,
            reg_user_no,
            mod_user_no
        )
        VALUES
            (
                #{companyCd},
                #{hotelNm},
                #{hotelNmEn},
                #{vocSysLevelCd},
                #{useStartDt},
                #{useEndDt},
                #{hotelLogoPath},
                'Y',
                #{regUserNo},
                #{modUserNo}
            )
    </insert>

	<!-- 호텔정보 수정 -->
    <update id="updateHotel">
        UPDATE tb_hotel SET
            hotel_nm             = #{hotelNm},
            hotel_nm_en          = #{hotelNmEn},
            voc_sys_level_cd     = #{vocSysLevelCd},
            use_start_dt         = #{useStartDt},
            use_end_dt           = #{useEndDt},
            hotel_logo_path      = #{hotelLogoPath},
            mod_user_no          = #{modUserNo}
          WHERE company_cd = #{companyCd}
    </update>

	<!-- 호텔정보 삭제 -->
    <update id="deleteHotel">
        UPDATE tb_hotel
           SET use_yn = 'N'
         WHERE company_cd = #{companyCd}
    </update>
</mapper>
