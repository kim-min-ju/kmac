<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.rmsoft.bms.voc.mapper.VocHistMapper">

    <!-- VOC이력 목록 조회 -->
    <select id="getVocHistList" resultType="voc.vochist">
        SELECT hist_seq             AS "histSeq",
               hotel_cd             AS "hotelCd",
               voc_id               AS "vocId",
               hist_type_cd         AS "histTypeCd",
               hist_cont            AS "histCont",
               reg_user_no          AS "regUserNo",
               reg_dt               AS "regDt"
          FROM tb_voc_hist
         <where>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(p.histSeq)">AND hist_seq = #{p.histSeq} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(p.hotelCd)">AND hotel_cd = #{p.hotelCd} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(p.vocId)">AND voc_id = #{p.vocId} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(p.histTypeCd)">AND hist_type_cd = #{p.histTypeCd} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(p.histCont)">AND hist_cont = #{p.histCont} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(p.regUserNo)">AND reg_user_no = #{p.regUserNo} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(p.regDt)">AND reg_dt = #{p.regDt} </if>
         </where>
         ORDER BY lsupd_dt DESC
         <if test="offset &gt; -1">
         LIMIT #{offset}, #{length}
         </if>
    </select>
    <select id="getVocHistListCount" resultType="long">
        SELECT COUNT(1)
          FROM tb_voc_hist
        <where>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(histSeq)">AND hist_seq = #{histSeq} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(hotelCd)">AND hotel_cd = #{hotelCd} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(vocId)">AND voc_id = #{vocId} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(histTypeCd)">AND hist_type_cd = #{histTypeCd} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(histCont)">AND hist_cont = #{histCont} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(regUserNo)">AND reg_user_no = #{regUserNo} </if>
            <if test="@org.apache.commons.lang3.ObjectUtils@isNotEmpty(regDt)">AND reg_dt = #{regDt} </if>
        </where>
    </select>

	<!-- VOC이력 상세 조회 -->
    <select id="getVocHist" resultType="voc.vochist">
        SELECT hist_seq             AS "histSeq",
               hotel_cd             AS "hotelCd",
               voc_id               AS "vocId",
               hist_type_cd         AS "histTypeCd",
               hist_cont            AS "histCont",
               reg_user_no          AS "regUserNo",
               reg_dt               AS "regDt"
          FROM tb_voc_hist A
         <where>
           hist_seq = #{histSeq}
         </where>
    </select>

	<!-- VOC이력 등록 -->
    <insert id="mergeVocHist">
        MERGE INTO tb_voc_hist TGT
        USING
        (
            SELECT
                #{histSeq} AS "hist_seq",
                #{hotelCd} AS "hotel_cd",
                #{vocId} AS "voc_id",
                #{histTypeCd} AS "hist_type_cd",
                #{histCont} AS "hist_cont",
                #{regUserNo} AS "reg_user_no",
                #{regDt} AS "reg_dt"
            FROM db_root
        ) SRC
        ON src.hist_seq = tgt.hist_seq
        WHEN MATCHED THEN
            UPDATE SET
                hotel_cd             = src.hotel_cd,
                voc_id               = src.voc_id,
                hist_type_cd         = src.hist_type_cd,
                hist_cont            = src.hist_cont,
                reg_user_no          = src.reg_user_no,
                reg_dt               = src.reg_dt
        WHEN NOT MATCHED THEN
            INSERT
            (
                hist_seq,
                hotel_cd,
                voc_id,
                hist_type_cd,
                hist_cont,
                reg_user_no,
                reg_dt
            )
            VALUES
            (
                src.hist_seq,
                src.hotel_cd,
                src.voc_id,
                src.hist_type_cd,
                src.hist_cont,
                src.reg_user_no,
                src.reg_dt
            )
    </insert>

	<!-- VOC이력 삭제 -->
    <update id="deleteVocHist">
        UPDATE tb_voc_hist
           SET use_at = 'N'
         <where>
             hist_seq=#{histSeq}
         </where>
    </update>

</mapper>
